service: proposy-api

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-northeast-1
  stage: dev
  profile: proposy

package:
  patterns:
    - "!node_modules/**"
    - "!.serverless/**"
    - "!*.md"
    - "!*.log"

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-customers-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    AppSyncApi:
      Type: AWS::AppSync::GraphQLApi
      Properties:
        Name: ${self:service}-${self:provider.stage}
        AuthenticationType: API_KEY

    AppSyncApiKey:
      Type: AWS::AppSync::ApiKey
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        Description: API Key for ${self:service}

    AppSyncSchema:
      Type: AWS::AppSync::GraphQLSchema
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        Definition: ${file(schema.graphql)}

    # データソース追加
    CustomerTableDataSource:
      Type: AWS::AppSync::DataSource
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        Name: CustomerTableDataSource
        Type: AMAZON_DYNAMODB
        DynamoDBConfig:
          TableName: !Ref CustomerTable
          AwsRegion: ${self:provider.region}
        ServiceRoleArn: !GetAtt AppSyncDynamoDBRole.Arn

    # IAMロール追加
    AppSyncDynamoDBRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: appsync.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: DynamoDBAccess
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:Scan
                    - dynamodb:Query
                  Resource: !GetAtt CustomerTable.Arn

    # listCustomers リゾルバー追加
    ListCustomersResolver:
      Type: AWS::AppSync::Resolver
      Properties:
        ApiId: !GetAtt AppSyncApi.ApiId
        TypeName: Query
        FieldName: listCustomers
        DataSourceName: !GetAtt CustomerTableDataSource.Name
        Runtime:
          Name: APPSYNC_JS
          RuntimeVersion: 1.0.0
        Code: |
          export function request(ctx) {
            return { operation: 'Scan' };
          }
          export function response(ctx) {
            return ctx.result.items;
          }

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: api
          method: get
